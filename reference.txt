import json
import requests_with_caching

def get_movies_from_tastedive(movie):
    baseurl="https://tastedive.com/api/similar"
    parameters={}
    parameters["q"]=movie
    parameters["type"]="movies"
    parameters["limit"]=5
    response=requests_with_caching.get(baseurl,params=parameters)
    print(response.url)
    resp=response.json()
    return resp

def extract_movie_titles(data):
    lst_movies=[]
    for i in data["Similar"]["Results"]:
        lst_movies.append(i["Name"])
    return lst_movies

def get_related_titles(data):
    names=list()
    for movie in data:
        response=extract_movie_titles(get_movies_from_tastedive(movie))
        for name in response:
            if name in names:
                print("Continue")
                continue
            else:
                print("Appending")
                names.append(name)
    return names

def get_movie_data(movie):
    baseurl="http://www.omdbapi.com/"
    parameters={"r":"json"}
    parameters["t"]=movie
    response=requests_with_caching.get(baseurl,params=parameters)
    return response.json()

def get_movie_rating(movieNameJson):
    strRanting=""
    for typeRantingList in movieNameJson["Ratings"]:
        if typeRantingList["Source"]== "Rotten Tomatoes":
            strRanting = typeRantingList["Value"]
    if strRanting != "":
        ranting = int(strRanting[:2])
    else: ranting = 0
    return ranting

def get_sorted_recommendations(Movies):
    print("Start")
    inter1=list()
    inter1=get_related_titles(Movies)
    #print(sorted(inter1))
    inter={}
    for movie in inter1:
        rating=get_movie_rating(get_movie_data(movie))
        inter[movie]=rating
    final=list()
    for i in inter:
        for 
    return inter
    